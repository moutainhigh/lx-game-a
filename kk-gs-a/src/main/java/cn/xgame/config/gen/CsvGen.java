package cn.xgame.config.gen;import java.util.List;import java.util.Map;import x.javaplus.collections.Lists;import x.javaplus.csv.util.Csv;import cn.xgame.system.SystemCfg;import cn.xgame.config.o.AnswerPo;
import cn.xgame.config.o.AskingPo;
import cn.xgame.config.o.BbuildingPo;
import cn.xgame.config.o.Build_producePo;
import cn.xgame.config.o.Build_shopPo;
import cn.xgame.config.o.Build_treasurePo;
import cn.xgame.config.o.CaptainPo;
import cn.xgame.config.o.ChapterPo;
import cn.xgame.config.o.EctypePo;
import cn.xgame.config.o.Equip_auxiliaryPo;
import cn.xgame.config.o.Equip_chipPo;
import cn.xgame.config.o.Equip_weaponPo;
import cn.xgame.config.o.GiftbagPo;
import cn.xgame.config.o.ItemPo;
import cn.xgame.config.o.NoticePo;
import cn.xgame.config.o.PalyerlevelPo;
import cn.xgame.config.o.ReclaimPo;
import cn.xgame.config.o.RquestionPo;
import cn.xgame.config.o.SbuildingPo;
import cn.xgame.config.o.ShipPo;
import cn.xgame.config.o.StarsPo;
import cn.xgame.config.o.TaskPo;
import cn.xgame.config.o.TaskcndPo;
import cn.xgame.config.o.TaverndataPo;
import cn.xgame.config.o.TechPo;
import cn.xgame.config.o.TreasurePo;

public class CsvGen {	public static final List<AnswerPo> answerpos = Lists.newArrayList();	public static final List<AskingPo> askingpos = Lists.newArrayList();	public static final List<BbuildingPo> bbuildingpos = Lists.newArrayList();	public static final List<Build_producePo> build_producepos = Lists.newArrayList();	public static final List<Build_shopPo> build_shoppos = Lists.newArrayList();	public static final List<Build_treasurePo> build_treasurepos = Lists.newArrayList();	public static final List<CaptainPo> captainpos = Lists.newArrayList();	public static final List<ChapterPo> chapterpos = Lists.newArrayList();	public static final List<EctypePo> ectypepos = Lists.newArrayList();	public static final List<Equip_auxiliaryPo> equip_auxiliarypos = Lists.newArrayList();	public static final List<Equip_chipPo> equip_chippos = Lists.newArrayList();	public static final List<Equip_weaponPo> equip_weaponpos = Lists.newArrayList();	public static final List<GiftbagPo> giftbagpos = Lists.newArrayList();	public static final List<ItemPo> itempos = Lists.newArrayList();	public static final List<NoticePo> noticepos = Lists.newArrayList();	public static final List<PalyerlevelPo> palyerlevelpos = Lists.newArrayList();	public static final List<ReclaimPo> reclaimpos = Lists.newArrayList();	public static final List<RquestionPo> rquestionpos = Lists.newArrayList();	public static final List<SbuildingPo> sbuildingpos = Lists.newArrayList();	public static final List<ShipPo> shippos = Lists.newArrayList();	public static final List<StarsPo> starspos = Lists.newArrayList();	public static final List<TaskPo> taskpos = Lists.newArrayList();	public static final List<TaskcndPo> taskcndpos = Lists.newArrayList();	public static final List<TaverndataPo> taverndatapos = Lists.newArrayList();	public static final List<TechPo> techpos = Lists.newArrayList();	public static final List<TreasurePo> treasurepos = Lists.newArrayList();
	public static void load(){		loadAnswerPo( "answer.csv" );		loadAskingPo( "asking.csv" );		loadBbuildingPo( "bbuilding.csv" );		loadBuild_producePo( "build_produce.csv" );		loadBuild_shopPo( "build_shop.csv" );		loadBuild_treasurePo( "build_treasure.csv" );		loadCaptainPo( "captain.csv" );		loadChapterPo( "chapter.csv" );		loadEctypePo( "ectype.csv" );		loadEquip_auxiliaryPo( "equip_auxiliary.csv" );		loadEquip_chipPo( "equip_chip.csv" );		loadEquip_weaponPo( "equip_weapon.csv" );		loadGiftbagPo( "giftbag.csv" );		loadItemPo( "item.csv" );		loadNoticePo( "notice.csv" );		loadPalyerlevelPo( "palyerlevel.csv" );		loadReclaimPo( "reclaim.csv" );		loadRquestionPo( "rquestion.csv" );		loadSbuildingPo( "sbuilding.csv" );		loadShipPo( "ship.csv" );		loadStarsPo( "stars.csv" );		loadTaskPo( "task.csv" );		loadTaskcndPo( "taskcnd.csv" );		loadTaverndataPo( "taverndata.csv" );		loadTechPo( "tech.csv" );		loadTreasurePo( "treasure.csv" );
	}	private static void loadAnswerPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			AnswerPo o = new AnswerPo(data);			answerpos.add( o );		}	}	private static void loadAskingPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			AskingPo o = new AskingPo(data);			askingpos.add( o );		}	}	private static void loadBbuildingPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			BbuildingPo o = new BbuildingPo(data);			bbuildingpos.add( o );		}	}	private static void loadBuild_producePo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			Build_producePo o = new Build_producePo(data);			build_producepos.add( o );		}	}	private static void loadBuild_shopPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			Build_shopPo o = new Build_shopPo(data);			build_shoppos.add( o );		}	}	private static void loadBuild_treasurePo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			Build_treasurePo o = new Build_treasurePo(data);			build_treasurepos.add( o );		}	}	private static void loadCaptainPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			CaptainPo o = new CaptainPo(data);			captainpos.add( o );		}	}	private static void loadChapterPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			ChapterPo o = new ChapterPo(data);			chapterpos.add( o );		}	}	private static void loadEctypePo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			EctypePo o = new EctypePo(data);			ectypepos.add( o );		}	}	private static void loadEquip_auxiliaryPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			Equip_auxiliaryPo o = new Equip_auxiliaryPo(data);			equip_auxiliarypos.add( o );		}	}	private static void loadEquip_chipPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			Equip_chipPo o = new Equip_chipPo(data);			equip_chippos.add( o );		}	}	private static void loadEquip_weaponPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			Equip_weaponPo o = new Equip_weaponPo(data);			equip_weaponpos.add( o );		}	}	private static void loadGiftbagPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			GiftbagPo o = new GiftbagPo(data);			giftbagpos.add( o );		}	}	private static void loadItemPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			ItemPo o = new ItemPo(data);			itempos.add( o );		}	}	private static void loadNoticePo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			NoticePo o = new NoticePo(data);			noticepos.add( o );		}	}	private static void loadPalyerlevelPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			PalyerlevelPo o = new PalyerlevelPo(data);			palyerlevelpos.add( o );		}	}	private static void loadReclaimPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			ReclaimPo o = new ReclaimPo(data);			reclaimpos.add( o );		}	}	private static void loadRquestionPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			RquestionPo o = new RquestionPo(data);			rquestionpos.add( o );		}	}	private static void loadSbuildingPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			SbuildingPo o = new SbuildingPo(data);			sbuildingpos.add( o );		}	}	private static void loadShipPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			ShipPo o = new ShipPo(data);			shippos.add( o );		}	}	private static void loadStarsPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			StarsPo o = new StarsPo(data);			starspos.add( o );		}	}	private static void loadTaskPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			TaskPo o = new TaskPo(data);			taskpos.add( o );		}	}	private static void loadTaskcndPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			TaskcndPo o = new TaskcndPo(data);			taskcndpos.add( o );		}	}	private static void loadTaverndataPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			TaverndataPo o = new TaverndataPo(data);			taverndatapos.add( o );		}	}	private static void loadTechPo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			TechPo o = new TechPo(data);			techpos.add( o );		}	}	private static void loadTreasurePo( String file ){				Csv csv = new Csv( SystemCfg.FILE_NAME + "configs/" + file );				for( Map<String, String> data : csv.getValues() ){			TreasurePo o = new TreasurePo(data);			treasurepos.add( o );		}	}
	public static AnswerPo getAnswerPo( int x ){		for( AnswerPo o : answerpos ){			if( o.id == x )				return o;		}		return null;	}	public static AskingPo getAskingPo( int x ){		for( AskingPo o : askingpos ){			if( o.id == x )				return o;		}		return null;	}	public static BbuildingPo getBbuildingPo( int x ){		for( BbuildingPo o : bbuildingpos ){			if( o.id == x )				return o;		}		return null;	}	public static Build_producePo getBuild_producePo( int x ){		for( Build_producePo o : build_producepos ){			if( o.id == x )				return o;		}		return null;	}	public static Build_shopPo getBuild_shopPo( int x ){		for( Build_shopPo o : build_shoppos ){			if( o.id == x )				return o;		}		return null;	}	public static Build_treasurePo getBuild_treasurePo( int x ){		for( Build_treasurePo o : build_treasurepos ){			if( o.id == x )				return o;		}		return null;	}	public static CaptainPo getCaptainPo( int x ){		for( CaptainPo o : captainpos ){			if( o.id == x )				return o;		}		return null;	}	public static ChapterPo getChapterPo( int x ){		for( ChapterPo o : chapterpos ){			if( o.id == x )				return o;		}		return null;	}	public static EctypePo getEctypePo( int x ){		for( EctypePo o : ectypepos ){			if( o.id == x )				return o;		}		return null;	}	public static Equip_auxiliaryPo getEquip_auxiliaryPo( int x ){		for( Equip_auxiliaryPo o : equip_auxiliarypos ){			if( o.id == x )				return o;		}		return null;	}	public static Equip_chipPo getEquip_chipPo( int x ){		for( Equip_chipPo o : equip_chippos ){			if( o.id == x )				return o;		}		return null;	}	public static Equip_weaponPo getEquip_weaponPo( int x ){		for( Equip_weaponPo o : equip_weaponpos ){			if( o.id == x )				return o;		}		return null;	}	public static GiftbagPo getGiftbagPo( int x ){		for( GiftbagPo o : giftbagpos ){			if( o.id == x )				return o;		}		return null;	}	public static ItemPo getItemPo( int x ){		for( ItemPo o : itempos ){			if( o.id == x )				return o;		}		return null;	}	public static NoticePo getNoticePo( int x ){		for( NoticePo o : noticepos ){			if( o.id == x )				return o;		}		return null;	}	public static PalyerlevelPo getPalyerlevelPo( int x ){		for( PalyerlevelPo o : palyerlevelpos ){			if( o.id == x )				return o;		}		return null;	}	public static ReclaimPo getReclaimPo( int x ){		for( ReclaimPo o : reclaimpos ){			if( o.id == x )				return o;		}		return null;	}	public static RquestionPo getRquestionPo( int x ){		for( RquestionPo o : rquestionpos ){			if( o.ID == x )				return o;		}		return null;	}	public static SbuildingPo getSbuildingPo( int x ){		for( SbuildingPo o : sbuildingpos ){			if( o.id == x )				return o;		}		return null;	}	public static ShipPo getShipPo( int x ){		for( ShipPo o : shippos ){			if( o.id == x )				return o;		}		return null;	}	public static StarsPo getStarsPo( int x ){		for( StarsPo o : starspos ){			if( o.id == x )				return o;		}		return null;	}	public static TaskPo getTaskPo( int x ){		for( TaskPo o : taskpos ){			if( o.id == x )				return o;		}		return null;	}	public static TaskcndPo getTaskcndPo( int x ){		for( TaskcndPo o : taskcndpos ){			if( o.id == x )				return o;		}		return null;	}	public static TaverndataPo getTaverndataPo( int x ){		for( TaverndataPo o : taverndatapos ){			if( o.id == x )				return o;		}		return null;	}	public static TechPo getTechPo( int x ){		for( TechPo o : techpos ){			if( o.id == x )				return o;		}		return null;	}	public static TreasurePo getTreasurePo( int x ){		for( TreasurePo o : treasurepos ){			if( o.id == x )				return o;		}		return null;	}
}